require 'yaml'
require 'ostruct'

fastlane_version "1.47.0"

default_platform :ios

# match_git_url = "https://github.com/platanus/apple-certificates.git"
#
# cordova_app_name = cordova_get_app_name
# cordova_app_id = cordova_get_app_id
# project_path = "platforms/ios/#{cordova_app_name}.xcodeproj"
#
# config = YAML.load(open("config.yml"))
# settings = OpenStruct.new(config)

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."

    # increment_build_number

    # xctool # run the tests of your app
  end

  config['stages'].keys.each do |stage|
    desc "Deploy a #{stage} version"
    lane stage.to_sym do |options|
      puts stage
      stage_config = settings.stages[stage]
      build(options.merge(stage: stage, stage_config: stage_config))
    end
  end

  private_lane :build do |options|
    stage_config = options[:stage_config]

    sh "cordova prepare --env=#{options[:stage]}"

    sign_type = options[:stage] == 'production' ? 'appstore' : 'development'
    match(
      git_url: match_git_url,
      type: sign_type,
      app_identifier: cordova_app_id,
      username: stage_config['apple_id'],
    )

    recreate_schemes(
      project: project_path
    )

    gym(
      verbose: true,
      project: project_path,
      scheme: cordova_app_name,
      xcconfig: "platforms/ios/cordova/build-#{stage_config['configuration']}.xcconfig"
    )

    publish
  end

  desc "Upload the binary"
  lane :publish do
    deliver(
      force: true,
      submit_for_review: false,
      skip_metadata: true,
      skip_screenshots: true
    )
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end



# More information about multiple platforms in fastlane: https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
