# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.36.2"

default_platform :ios

app_name = File.open('../config.xml').read.match(/<name>(.*)<\/name>/)[1]
project_path = "platforms/ios/#{app_name}.xcodeproj"

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."


    # increment_build_number

    # xctool # run the tests of your app
  end

  desc "Get certificates and profiles"
  lane :match do
    match_git_url = "git@github.com:platanus/apple-certificates.git"

    match(git_url: match_git_url,
          type: "adhoc")
    match(git_url: match_git_url,
          type: "development",
          readonly: true)
    match(git_url: match_git_url,
          type: "appstore")
  end

  desc "Build IPA file"
  lane :build do
    recreate_schemes(
      project: project_path
    )

    sigh

    sh "cordova prepare --env=production"

    gym(
      project: project_path,
      output_directory: "fastlane/build",
      export_method: "ad-hoc",
      xcconfig: "platforms/ios/cordova/build.xcconfig"
    )
  end

  desc "Upload to testflight"
  lane :testflight do
    build
    pilot(email: "amos@platan.us")
  end

  desc "Deploy a new version to the App Store"
  lane :publish do
    deliver(
      force: true,
      submit_for_review: false,
      skip_metadata: true,
      skip_screenshots: true
    )
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end



# More information about multiple platforms in fastlane: https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
